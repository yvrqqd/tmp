import streamlit as st
import requests
import pandas as pd
import time

st.session_state["data"] = pd.DataFrame()
with st.sidebar:
    st.title("–¢–µ—Å—Ç–æ–≤–æ–µ")
    st.page_link("main.py", label="README", icon="üè†")
    st.subheader("–ó–∞–¥–∞–Ω–∏–µ 1")
    st.page_link("pages/city_chat.py", label="–ì–æ—Ä–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è | —á–∞—Ç", icon="1Ô∏è‚É£")
    st.page_link("pages/city_file.py", label="–ì–æ—Ä–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è | —Ñ–∞–π–ª", icon="2Ô∏è‚É£")
    st.subheader("–ó–∞–¥–∞–Ω–∏–µ 2")
    st.page_link("pages/random_greeting.py", label="–†–∞–Ω–¥–æ–º–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ", icon="1Ô∏è‚É£")

st.info("–ö–≤–æ—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ 100 –≤ —á–∞—Å, –ø–æ—ç—Ç–æ–º—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–¥–∞–Ω–∏—è –µ–µ –Ω–µ —Ö–≤–∞—Ç–∏—Ç. –ü–µ—Ä–µ–¥ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–æ–π –æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –µ–Ω–¥–ø–æ–∏–Ω—Ç—ã.")

st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, —á—Ç–æ –±—ã–ª —É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è")
st.code(''',message
0,–ü—Ä–∏–≤–µ—Ç! –Ø —Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç —Ä–æ–∑ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –ü–∏—Ç–µ—Ä —Å–µ–≥–æ–¥–Ω—è –¥–æ 15:00. –ú–æ–∂–Ω–æ —É –≤–∞—Å —Ç–∞–∫–æ–µ –æ—Ñ–æ—Ä–º–∏—Ç—å?
1,"–ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É —Ü–≤–µ—Ç–æ–≤ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å?"
2,"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤ –≤ –≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ?"
3,"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤ –≤ –≥–æ—Ä–æ–¥ –ï–∫–±? –ù—É–∂–Ω–æ –¥–æ –∑–∞–≤—Ç—Ä–∞. –°–ø–∞—Å–∏–±–æ."''')

uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
if uploaded_file is not None:
  df = pd.read_csv(uploaded_file)
  df.drop(df.index[0], inplace=True)
  df.drop(df.columns[[0]], axis=1, inplace=True)
  st.session_state["data"]=df

for i in range(st.session_state["data"].shape[0]):
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
        "accept": "application/json",
        "Authorization": f"Api-Key {st.secrets['token']}",
        "Content-Type": "application/json"
    }

    body = {
    "modelUri": "gpt://b1gfl2975iijeg2iqtc0/yandexgpt-lite/latest",
    "completionOptions": {
        "stream": False,
        "temperature": 0.1,
        "maxTokens": 5
    },
    "messages": [
        {
        "role": "system",
        "text": "–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ –±—ã–ª —É–ø–æ–º—è–Ω—É—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏. –í –æ—Ç–≤–µ—Ç–µ –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø–æ–º—è–Ω—É—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –¥–∞–Ω–∞ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –∏–ª–∏ –±—ã–ª–∞ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞"
        },
        {
        "role": "user",
        "text": st.session_state["data"].iloc[i].values[0]
        }
    ]
    }
    response = requests.post(url, headers=headers, json=body).json()
    try:
        city = response.get("result","").get("alternatives","")[0].get("message","").get("text","")
        cols = st.columns([2, 5])
        cols[0].code(city)
        cols[1].write(st.session_state["data"].iloc[i].values[0])
    except:
        st.error("–ö–≤–æ—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å")
    time.sleep(1)